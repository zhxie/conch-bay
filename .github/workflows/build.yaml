name: Build

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - "backport-**"
      - "android-**"
      - "ios-**"

jobs:
  doctor:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn

      - name: expo-doctor dependencies
        run: yarn doctor

  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn

      - name: tsc code
        run: yarn compile

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn

      - name: ESLint code
        run: yarn lint

  format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn

      - name: Prettify code
        run: yarn format

  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    needs:
      - doctor
      - compile
      - lint
      - format

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          packager: yarn
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn

      - name: Build (iOS)
        if: matrix.os == 'macos-latest'
        run: eas build --local --non-interactive --platform ios --profile preview

      - name: Build (Android)
        if: matrix.os == 'ubuntu-latest'
        run: eas build --local --non-interactive --platform android --profile preview

      - name: Upload build artifacts (iOS)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'macos-latest'
        with:
          name: conch-bay-ios
          path: |
            ./*.tar.gz

      - name: Upload build artifacts (Android)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: conch-bay-android
          path: |
            ./*.apk
